{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "HashiCorp Vault LDAP Authentication",
    "Parameters": {
        "Region": {
            "Type": "String",
            "Default": "us-west-2"
        }
    },
    "Mappings": {
        "SubnetConfig": {
            "VPC": {
                "CIDR": "10.0.0.0/20"
            },
            "TestSubnet": {
                "CIDR": "10.0.0.0/24",
                "AZ": "us-west-2a"
            }
        },
        "InstanceConfig": {
            "Ldap": {
                "Ip": "10.0.0.100"
            }
        },
        "UserConfig": {
            "Login": {
                "Name": "student",
                "Pass": "password"
            }
        }
    },
    "Resources": {
        "PrivateHostedZone": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "HostedZoneConfig": {
                    "Comment": "Hosted zone for ca-lab.private"
                },
                "Name": "ca-lab.private.",
                "VPCs": [
                    {
                        "VPCId": {
                            "Ref": "TestVpc"
                        },
                        "VPCRegion": {
                            "Ref": "Region"
                        }
                    }
                ],
                "HostedZoneTags": [
                    {
                        "Key": "Name",
                        "Value": "Lab Private Hosted Zone"
                    }
                ]
            }
        },
        "PrivateRecordSetGroup": {
            "Type": "AWS::Route53::RecordSetGroup",
            "DependsOn": "PrivateHostedZone",
            "Properties": {
                "HostedZoneName": "ca-lab.private.",
                "Comment": "LDAP server DNS name",
                "RecordSets": [
                    {
                        "Name": "ldap.ca-lab.private.",
                        "Type": "A",
                        "ResourceRecords": [
                            {
                                "Fn::GetAtt": [
                                    "LdapInstance",
                                    "PrivateIp"
                                ]
                            }
                        ],
                        "TTL": "900"
                    }
                ]
            }
        },
        "LdapInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "LdapInstanceProfile"
                },
                "ImageId": "ami-31394949",
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "AWS::AccountId"
                },
                "PrivateIpAddress": {
                    "Fn::FindInMap": [
                        "InstanceConfig",
                        "Ldap",
                        "Ip"
                    ]
                },
                "SecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "LdapSecurityGroup",
                            "GroupId"
                        ]
                    }
                ],
                "SubnetId": {
                    "Ref": "TestSubnet"
                },
                "Tags": [
                    {
                        "Key": "Type",
                        "Value": "LDAP Server"
                    },
                    {
                        "Key": "Name",
                        "Value": "LDAP"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum install -y openldap openldap-clients openldap-servers\n",
                                "pass=$(slappasswd -s password)\n",
                                "echo olcRootPW: $pass >> olcDatabase\\=\\{2\\}hdb.ldif\n",
                                "sed -i 's/\\(olcSuffix: \\).*/\\1dc=ca-lab,dc=private/' olcDatabase\\=\\{2\\}hdb.ldif\n",
                                "sed -i 's/\\(olcRootDN: cn=Manager,\\).*/\\1dc=ca-lab,dc=private/' olcDatabase\\=\\{2\\}hdb.ldif\n",
                                "sed -i 's/dc=my-domain,dc=com/dc=ca-lab,dc=private/' olcDatabase\\=\\{1\\}monitor.ldif\n",
                                "echo 'olcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=Manager,dc=ca-lab,dc=private\" write by anonymous auth by * none' >> olcDatabase\\=\\{2\\}hdb.ldif\n",
                                "echo 'olcAccess: {1}to * by dn.base=\"cn=Manager,dc=ca-lab,dc=private\" write by self write by * read' >> olcDatabase\\=\\{2\\}hdb.ldif\n",
                                "systemctl enable slapd\n",
                                "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif\n",
                                "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif\n",
                                "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif\n",
                                "echo -en 'dn: dc=ca-lab,dc=private\nobjectClass: dcObject\nobjectClass: organization\ndc: ca-lab\no : ca-lab' > /tmp/ca-lab.ldif\n",
                                "ldapadd -f /tmp/ca-lab.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n",
                                "echo -en 'dn: ou=Users,dc=ca-lab,dc=private\nobjectClass: organizationalUnit\nou: Users' > /tmp/users.ldif\n",
                                "ldapadd -f /tmp/users.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n",
                                "echo -en 'dn: cn=Jeremy Cook,ou=Users,dc=ca-lab,dc=private\ncn: Jeremy Cook\nsn: Cook\nobjectClass: inetOrgPerson\nuserPassword: sheep\nuid: jcook' > /tmp/jeremy.ldif\n",
                                "ldapadd -f /tmp/jeremy.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n",
                                "echo -en 'dn: cn=Logan Rakai,ou=Users,dc=ca-lab,dc=private\ncn: Logan Rakai\nsn: Rakai\nobjectClass: inetOrgPerson\nuserPassword: wolf\nuid: lrakai' > /tmp/logan.ldif\n",
                                "ldapadd -f /tmp/logan.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n",
                                "echo -en 'dn: cn=Engineering,ou=Users,dc=ca-lab,dc=private\ncn: Engineering\nobjectClass: groupOfNames\nmember: cn=Jeremy Cook,ou=Users,dc=ca-lab,dc=private' > /tmp/engineering.ldif\n",
                                "ldapadd -f /tmp/engineering.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n",
                                "echo -en 'dn: cn=Research,ou=Users,dc=ca-lab,dc=private\ncn: Research\nobjectClass: groupOfNames\nmember: cn=Logan Rakai,ou=Users,dc=ca-lab,dc=private' > /tmp/research.ldif\n",
                                "ldapadd -f /tmp/research.ldif -D cn=Manager,dc=ca-lab,dc=private -w password\n"
                            ]
                        ]
                    }
                }
            }
        },
        "LdapEc2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ldap-instance-policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "iam:*"
                                    ],
                                    "Effect": "Deny",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "RoleName": "ldap-instance-role"
            }
        },
        "LdapInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "LdapEc2InstanceRole"
                    }
                ]
            }
        },
        "Cloud9Env": {
            "Type": "AWS::Cloud9::EnvironmentEC2",
            "Properties": {
                "Description": "Lab Cloud9 Environment",
                "AutomaticStopTimeMinutes": 60,
                "InstanceType": "t2.micro",
                "OwnerArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:iam::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":user/student"
                        ]
                    ]
                },
                "Name": "Lab",
                "SubnetId": {
                    "Ref": "TestSubnet"
                }
            }
        },
        "TestVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "VPC",
                        "CIDR"
                    ]
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Test Vpc"
                    },
                    {
                        "Key": "Environment",
                        "Value": "Test"
                    }
                ]
            }
        },
        "TestSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "TestVpc"
                },
                "MapPublicIpOnLaunch": true,
                "AvailabilityZone": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "TestSubnet",
                        "AZ"
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "TestSubnet",
                        "CIDR"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Test Subnet"
                    },
                    {
                        "Key": "Environment",
                        "Value": "Test"
                    }
                ]
            }
        },
        "TestInternetGatewayAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "TestVpc"
                },
                "InternetGatewayId": {
                    "Ref": "TestInternetGateway"
                }
            }
        },
        "TestPublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "TestVpc"
                }
            }
        },
        "TestPublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "TestPublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "TestInternetGateway"
                }
            }
        },
        "TestSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "TestSubnet"
                },
                "RouteTableId": {
                    "Ref": "TestPublicRouteTable"
                }
            }
        },
        "TestInternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "LdapSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow incoming internal ldap and ssh traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Fn::FindInMap": [
                                "SubnetConfig",
                                "VPC",
                                "CIDR"
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "389",
                        "ToPort": "389",
                        "CidrIp": {
                            "Fn::FindInMap": [
                                "SubnetConfig",
                                "VPC",
                                "CIDR"
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "636",
                        "ToPort": "636",
                        "CidrIp": {
                            "Fn::FindInMap": [
                                "SubnetConfig",
                                "VPC",
                                "CIDR"
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "TestVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LDAP Servers"
                    },
                    {
                        "Key": "Environment",
                        "Value": "Test"
                    }
                ]
            }
        },
        "Group": {
            "Type": "AWS::IAM::Group",
            "Properties": {
                "GroupName": "Students",
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "students-policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloud9:DescribeEnvironments",
                                        "cloud9:ListEnvironments",
                                        "cloud9:GetUserPublicKey",
                                        "cloud9:GetUserSettings",
                                        "cloud9:GetEnvironmentConfig",
                                        "cloud9:UpdateUserSettings",
                                        "cloud9:ValidateEnvironmentName",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeVpcs",
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:RevokeSecurityGroupIngress",
                                        "iam:GetUser",
                                        "iam:ListUsers"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloud9:DescribeEnvironmentMemberships"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "Null": {
                                            "cloud9:UserArn": "true",
                                            "cloud9:EnvironmentId": "true"
                                        }
                                    }
                                },
                                {
                                    "Action": [
                                        "ec2:Describe*"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow",
                                    "Condition": {
                                        "StringEquals": {
                                            "ec2:Region": "us-west-2"
                                        }
                                    }
                                },
                                {
                                    "Action": [
                                        "health:DescribeEventAggregates",
                                        "iam:ListRoles"
                                    ],
                                    "Resource": [
                                        "*"
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "logs:GetLogEvents"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "User": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": {
                        "Fn::FindInMap": [
                            "UserConfig",
                            "Login",
                            "Pass"
                        ]
                    }
                },
                "Path": "/",
                "Groups": [
                    "Students"
                ],
                "UserName": {
                    "Fn::FindInMap": [
                        "UserConfig",
                        "Login",
                        "Name"
                    ]
                }
            }
        }
    }
}